name: "action-setup"
description: "do common setup steps re-used in workflows"

# split the caching bit out ??

inputs:
  "SOPS_AGE_KEY":
    description: "SOPS_AGE_KEY"
    required: true
  "CACHE_KEY":
    default: "nixcfg-hm-3"
  "PERSIST_CACHE":
    default: false
runs:
  using: "composite"
  steps:
    - name: sshd-authorized-users
      shell: bash
      run: |
        mkdir -p ~/.ssh
        curl -L 'https://github.com/colemickens.keys' > ~/.ssh/authorized_keys
        sudo chown -R $USER:$USER $HOME/.ssh
        sudo chmod og-w $HOME
        sudo chmod 0755 $HOME
        sudo chmod -R 0700 $HOME/.ssh
        ls -al /home
        ls -al ~/
        ls -al ~/.ssh
        ls -al ~/.ssh/authorized_keys
        cat ~/.ssh/authorized_keys
        cat /etc/ssh/sshd_config
        sudo ls /etc/ssh/sshd_config.d/ || true
        sudo bash -e 'cat /etc/ssh/sshd_config.d/*' || true
        sudo sed -i 's/#AuthorizedKeysFile/AuthorizedKeysFile/g' /etc/ssh/sshd_config
        sudo sed -i 's/#PubkeyAuthentication/PubkeyAuthentication/g' /etc/ssh/sshd_config
        sudo sed -i 's/#Port/Port/g' /etc/ssh/sshd_config
        sudo sed -i 's/#AddressFamily/AddressFamily/g' /etc/ssh/sshd_config
        sudo sed -i 's/#ListenAddress/ListenAddress/g' /etc/ssh/sshd_config
        sudo sed -i 's/#HostKey/HostKey/g' /etc/ssh/sshd_config
        sudo sed -i 's/#LoginGraceTime/LoginGraceTime/g' /etc/ssh/sshd_config
        sudo sed -i 's/#StrictModes/StrictModes/g' /etc/ssh/sshd_config
        sudo sed -i 's/#MaxAuthTries/MaxAuthTries/g' /etc/ssh/sshd_config
        sudo sed -i 's/#MaxSessions/MaxSessions/g' /etc/ssh/sshd_config
        # sudo sed -i 's/#//g' /etc/ssh/sshd_config
        cat /etc/ssh/sshd_config
        ls -al /etc/ssh
        sudo systemctl restart sshd
    - name: install-nix
      uses: DeterminateSystems/nix-installer-action@v3
      with:
        # TODO: this can go away when nix reads nixConfig from flake reliably
        # ... maybe, but they don't make it over ssh-ng either...
        extra-conf: |
          experimental-features = nix-command flakes ca-references
          extra-substituters = https://cache.nixos.org https://colemickens.cachix.org https://nixpkgs-wayland.cachix.org https://unmatched.cachix.org https://nix-community.cachix.org https://cache.nixos.org
          extra-trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= colemickens.cachix.org-1:bNrJ6FfMREB4bd4BOjEN85Niu8VcPdQe4F4KxVsb/I4= nixpkgs-wayland.cachix.org-1:3lwxaILxMRkVhehr5StQprHdEo4IrE8sRho9R9HOLYA= unmatched.cachix.org-1:F8TWIP/hA2808FDABsayBCFjrmrz296+5CQaysosTTc= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs
          access-tokens = github.com=${{ inputs.GITHUB_TOKEN }}
    - name: age-key
      env:
        SOPS_AGE_KEY: ${{ inputs.SOPS_AGE_KEY }}
      shell: bash
      run: |
        printf "%s" "${SOPS_AGE_KEY}" > $HOME/.age-key.txt
    - name: cache-restore
      id: cache-restore
      uses: actions/cache/restore@v3
      with:
        path: /tmp/cache
        key: ${{ inputs.CACHE_KEY }}
    - name: cache-import
      if: steps.cache-restore.outputs.cache-hit == 'true'
      shell: bash
      run: |
        set -x
        nix copy -vvvv --no-check-sigs --from file:///tmp/cache --all ||
          echo "::warning ::'nix copy' from the cache failed"
    - name: home-manager
      shell: bash
      run: |
        set -x
        mkdir -p $HOME/.local/state/home-manager/profiles
        sudo mkdir -p /nix/var/nix/profiles/per-user/runner
        nix build '.#homeConfigurations.x86_64-linux.env-ci.activationPackage'
        nix run '.#homeConfigurations.x86_64-linux.env-ci.activationPackage'
        systemctl --user start sops-nix.service || systemctl --user status sops-nix.service
    - name: cache-persist
      if: ${{ inputs.PERSIST_CACHE }}
      shell: bash
      run: |
        set -x
        nix copy --no-check-sigs --to file:///tmp/cache-new?compression=none ./result
    - name: cache-save
      uses: actions/cache/save@v3
      if: ${{ inputs.PERSIST_CACHE }}
      with:
        path: /tmp/cache-new
        key: ${{ inputs.CACHE_KEY }}
    - name: setup-tailscale
      uses: colemickens/github-action-install-tailscale@main
      with:
        authkey_file: /home/runner/.tailscale_authkey
    - name: nix-workaround-3978
      shell: bash
      run: |
        nix flake lock --update-input systems
    - name: journal-sshd
      shell: bash
      run: |
        set -x
        sleep 120
        journalctl -u sshd
